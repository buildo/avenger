requisiti alto livello
- creare queries (con query*, compose, product) e possibili diverse strategie
- osservare una query e ricevere aggiornamenti (success, fail), da solo nel mondo
- osservare una query e reagire al fatto che altri la richiedono pi√π in la nel tempo
- osservare parte di una query (di una comp, prodotto) e ricevere aggiornamenti quando ci sono eventi che riguardano l'intera (compo, prodotto)
- viceversa, osservare intera (comp, prodotto) e ricevere aggiornamenti quando ci sono eventi che riguardano una parte
- invalidare una Query


Query(dato un input fisso, che decidiamo essere non un primitive type)
assi:
    - cached/composition/product
    - 3 strategies...
    - run/invalidate

TODO:
    - expire(ms) for compose
  - product
    - refetch
    - available
    - expire(ms)


observe
-
invalidate
